@model Project3.ModelsView.CollectInfoViewModel

@{
    ViewData["Title"] = "Edit Company Billing Policy";
    Layout = "~/Views/LayoutUser/LayoutUser.cshtml";

}

<h2>Edit</h2>

<h4>CompanyBillingPolicyViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label for="manufacturerSelect">Manufacturer</label>
                <select id="manufacturerSelect" name="VehicleName" asp-for="VehicleName" class="form-control">
                    <option value="">Chọn hãng xe</option>
                </select>
            </div>

            <div class="form-group">
                <label for="modelSelect">Vehicle Model</label>
                <select id="modelSelect" name="VehicleModel" asp-for="VehicleModel" class="form-control" disabled>
                    <option value="">Chọn mẫu xe</option>
                </select>
            </div>

            <div class="form-group">
                <label for="trimSelect">Vehicle Version</label>
                <select id="trimSelect" name="VehicleVersion" asp-for="VehicleVersion" class="form-control" disabled>
                    <option value="">Chọn phiên bản</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="VehicleRate" class="control-label"></label>
                <input asp-for="VehicleRate" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="VehicleBodyNumber" class="control-label"></label>
                <input asp-for="VehicleBodyNumber" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="VehicleEngineNumber" class="control-label"></label>
                <input asp-for="VehicleEngineNumber" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="DriverAge" class="control-label"></label>
                <input asp-for="DriverAge" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="DriverGender" class="control-label"></label>
                <input asp-for="DriverGender" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="DrivingHistory" class="control-label"></label>
                <input asp-for="DrivingHistory" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="CustomerAdd" class="control-label"></label>
                <select asp-for="CustomerAdd" class="form-control">
                    <option value="Urban">Urban</option>
                    <option value="Rural">Rural</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="Usage" class="control-label"></label>
                <select asp-for="Usage" class="form-control">
                    <option value="">Select Usage</option>
                    <option value="Daily">Daily</option>
                    <option value="Occasional">Occasional</option>
                </select>
                <span asp-validation-for="Usage" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AntiTheftDevice" class="control-label"></label>
                <input asp-for="AntiTheftDevice" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="MultiPolicy" class="control-label"></label>
                <input asp-for="MultiPolicy" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="SafeDriver" class="control-label"></label>
                <input asp-for="SafeDriver" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>
        </form>
    </div>
</div>
<script>
    let carData = [];

    // Fetch car data and populate the manufacturer dropdown
    async function loadCarData() {
        try {
            const response = await fetch('/api/cars');
            carData = await response.json();
            populateSelect('manufacturerSelect', carData, 'codename', 'name');
        } catch (error) {
            console.error('Error loading data:', error);
        }
    }

    // Generic function to populate a dropdown
    function populateSelect(selectId, data, valueField, textField) {
        const select = document.getElementById(selectId);
        select.innerHTML = '<option value="">Chọn</option>' + data.map(item => `<option value="${item[valueField]}">${item[textField]}</option>`).join('');
    }

    // Event listener for manufacturer dropdown change
    document.getElementById('manufacturerSelect').addEventListener('change', function () {
        const manufacturerCode = this.value;
        const modelSelect = document.getElementById('modelSelect');
        const trimSelect = document.getElementById('trimSelect');

        // Enable/disable dropdowns and clear previous options
        modelSelect.disabled = !manufacturerCode;
        trimSelect.disabled = true;
        modelSelect.innerHTML = '<option value="">Chọn mẫu xe</option>';
        trimSelect.innerHTML = '<option value="">Chọn phiên bản</option>';

        // Populate models if a manufacturer is selected
        if (manufacturerCode) {
            const manufacturer = carData.find(m => m.codename == manufacturerCode);
            if (manufacturer) {
                populateSelect('modelSelect', manufacturer.models, 'codename', 'name');
            }
        }
    });

    // Event listener for model dropdown change
    document.getElementById('modelSelect').addEventListener('change', function () {
        const manufacturerCode = document.getElementById('manufacturerSelect').value;
        const modelCode = this.value;
        const trimSelect = document.getElementById('trimSelect');

        // Enable/disable trim dropdown and clear previous options
        trimSelect.disabled = !modelCode;
        trimSelect.innerHTML = '<option value="">Chọn phiên bản</option>';

        // Populate trims if a model is selected
        if (modelCode) {
            const manufacturer = carData.find(m => m.codename == manufacturerCode);
            const model = manufacturer.models.find(m => m.codename == modelCode);
            if (model) {
                populateSelect('trimSelect', model.trims, 'codename', 'name');
            }
        }
    });

    // Load car data when the page loads
    loadCarData();
</script>