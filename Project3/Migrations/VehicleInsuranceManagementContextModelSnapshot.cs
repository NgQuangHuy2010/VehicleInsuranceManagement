// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project3.Models;

#nullable disable

namespace Project3.Migrations
{
    [DbContext(typeof(VehicleInsuranceManagementContext))]
    partial class VehicleInsuranceManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project3.Models.ClaimDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ClaimNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("claim_number");

                    b.Property<decimal?>("ClaimableAmount")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("claimable_amount");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_name");

                    b.Property<DateTime?>("DateOfAccident")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_accident");

                    b.Property<decimal?>("InsuredAmount")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("insured_amount");

                    b.Property<string>("PlaceOfAccident")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("place_of_accident");

                    b.Property<DateTime?>("PolicyEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("policy_end_date");

                    b.Property<decimal?>("PolicyNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("policy_number");

                    b.Property<DateTime?>("PolicyStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("policy_start_date");

                    b.HasKey("Id");

                    b.ToTable("claim_details", (string)null);
                });

            modelBuilder.Entity("Project3.Models.CompanyBillingPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("amount");

                    b.Property<decimal?>("BillNo")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("bill_no");

                    b.Property<string>("CustomerAddProve")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_add_prove");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_name");

                    b.Property<decimal?>("CustomerPhoneNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("customer_phone_number");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<decimal?>("PolicyNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("policy_number");

                    b.Property<string>("VehicleBodyNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_body_number");

                    b.Property<string>("VehicleEngineNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_engine_number");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_model");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_name");

                    b.Property<decimal?>("VehicleRate")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("vehicle_rate");

                    b.HasKey("Id");

                    b.ToTable("company_billing_policy", (string)null);
                });

            modelBuilder.Entity("Project3.Models.CompanyExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountOfExpense")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("amount_of_expense");

                    b.Property<string>("DateOfExpenses")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_of_expenses");

                    b.Property<string>("TypeOfExpense")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_of_expense");

                    b.HasKey("Id");

                    b.ToTable("company_expenses", (string)null);
                });

            modelBuilder.Entity("Project3.Models.Estimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AntiTheftDevice")
                        .HasColumnType("bit");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_name");

                    b.Property<decimal?>("CustomerPhoneNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("customer_phone_number");

                    b.Property<int>("DriverAge")
                        .HasColumnType("int");

                    b.Property<string>("DriverGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrivingHistory")
                        .HasColumnType("int");

                    b.Property<decimal?>("EstimateNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("estimate_number");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MultiPolicy")
                        .HasColumnType("bit");

                    b.Property<bool?>("SafeDriver")
                        .HasColumnType("bit");

                    b.Property<string>("SelectedCoverages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleBodyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleEngineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_model");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_name");

                    b.Property<decimal?>("VehicleNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VehiclePolicyType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_policy_type");

                    b.Property<decimal?>("VehicleRate")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("vehicle_rate");

                    b.Property<string>("VehicleVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleWarranty")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_warranty");

                    b.HasKey("Id");

                    b.ToTable("estimate", (string)null);
                });

            modelBuilder.Entity("Project3.Models.InsuranceProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerAdd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_add");

                    b.Property<string>("CustomerAddProve")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_add_prove");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_name");

                    b.Property<decimal?>("CustomerPhoneNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("customer_phone_number");

                    b.Property<string>("PolicyDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("policy_date");

                    b.Property<decimal?>("PolicyDuration")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("policy_duration");

                    b.Property<decimal?>("PolicyNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("policy_number");

                    b.Property<string>("VehicleBodyNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_body_number");

                    b.Property<string>("VehicleEngineNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_engine_number");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_model");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_name");

                    b.Property<decimal?>("VehicleNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("vehicle_number");

                    b.Property<decimal?>("VehicleRate")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("vehicle_rate");

                    b.Property<string>("VehicleVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_version");

                    b.Property<string>("VehicleWarranty")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_warranty");

                    b.HasKey("Id");

                    b.ToTable("insurance_process", (string)null);
                });

            modelBuilder.Entity("Project3.Models.VehicleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleBodyNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_body_number");

                    b.Property<string>("VehicleEngineNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_engine_number");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_model");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_name");

                    b.Property<decimal?>("VehicleNumber")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("VehicleOwnerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_owner_name");

                    b.Property<decimal?>("VehicleRate")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("vehicle_rate");

                    b.Property<string>("VehicleVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_version");

                    b.Property<string>("WarrantyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("vehicle_information", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
